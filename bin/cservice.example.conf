# $Id: cservice.example.conf.in,v 1.9 2005/12/06 18:12:44 kewlio Exp $
# Channel Services configuration file.
#
# sql_host = Hostname/IP of the PostgreSQL server.

sql_host = 127.0.0.1
sql_port = 5432

# sql_db = Name of the database. 
# (To create from the template, run cservice.sql through Postgres)

sql_db = cservice

# sql_user is the username to pass to Postgres on connection.
# Usefull if your account name is not the same as your Database
# username.

sql_user = dan
sql_pass = foo

# General 'Bot' options.

nickname = X
username = cservice
hostname = undernet.org
userdescription = For help type: /msg X help
# Important: remove 'd' deaf mode if you intend to enable cservice FLOODPRO
mode = +idk

#
# Channel to relay flood/warnings/exceptions, etc.
#

pending_page_url = http://www.yoursite.com/live/view_app.php

relay_channel = #coder-com

#
# Channel to relay useful information, but not quite as annoying
# as the debug_channel ! (a.k.a privileged user relay channel)
# 

priv_relay_channel = #coder-com

#
# Channel to relay useful debug information that otherwise
# annoy CS admins. :)
#

debug_channel = #coder-com

#
# Coder channel.
#
# Channel used to extract levels to display coder access status.

coder_channel = #coder-com

#
# Frequency in seconds to check the database for updates.
#

update_interval = 180

#
# Number of seconds to sample for flooding.
#

flood_duration = 30

#
# Input flood rate.
#
# Eg: 30, for 30 points amassed within "flood_duration" seconds.
#

input_flood = 30

#
# Output flood rate.
#
# Eg: 20480 (20k within "flood_duration" seconds).
#

output_flood = 20480

#
# Frequency in seconds to sample after clients channel flood
#

channels_flood_period = 30

#
# After how many seconds of absence of flood activity should reduce the FLOODNET value
# Eg. 300 = 5 minutes. 

floodpro_relaxtime = 300

#
# How many not(ic)es will be stored for an offline user 
# 0 is disallowed, 7 will be used

max_notes = 7;

#
# Minimum duration at which to set a topic in a non idle channel.
# (Seconds).
#

topic_duration = 1800

#
# Duration at which we check for idle user accounts in memory.
# (Seconds).

expire_interval = 3600

#
# How long those accounts should have been idle before they are
# uncached. (Seconds).
#

cache_interval = 3600

#
# How often to commit changes to Pending channels.
# (Seconds).

pending_duration = 180

#
# How often to notify changes of Pending channels.
# (Seconds).

pending_notif_duration = 1800

#
# How often to check if the connection to the backend has
# fallen over? (Seconds).
#

connection_check_frequency = 10

#
# How many times do we try every 'connection_check_frequency' seconds
# to reconnect before finally giving up and exiting?
#

connection_retry_total = 5

#
# How often (in seconds) should we check all channels that have
# floating-limit set to see if they need a new limit setting?
#
# Note: 30 is a good value, try 1min if you have lots of chans
# and not so much CPU.

limit_check = 30

#
# How long (In seconds) should we wait before allowing
# logins after startup. (Incase you're on a busy network
# with a really large burst and need things to settle down
# first to ease up load on the Db).
#

login_delay = 360


#
# What is the period (in seconds) in which we will check to
# see if someone has sent too many notes, and what do we
# define "Too Many" as?
# Ie: You can send 'note_limit' notes in 'note_duration' seconds.
#

note_duration = 3600
note_limit = 5

#
# Pre-cache 'x' days worth of user accounts.
# This lets you preload all the users who have logged in during the last
# 'x' number of days to avoid a large number of queries when processing
# +r accounts during the initial net.burst.
#
preload_user_days = 1

#
# Specify the filename for the 'Admin Log'.
# Basically a log of all commands admins type.
#
admin_logfile = admin.log

#
# Specify the filename for the 'Command Log'
# A log of ALL commands issued by ALL users.
# requires USE_COMMAND_LOG in cservice_config.h
command_logfile = cs.log

#
# This option is used only if ALLOW_HELLO is defined in
# cservice_config.h, thus enabling the HELLO command in cservice.
# This is the time to block users attempting to flood the bot with
# hello commands, in seconds.
#
hello_block_period = 3600

# Message when login-on-connect (LoC) parameters are incorrect
# Used with iauthd-c: https://github.com/UndernetIRC/iauthd-c
#
loc_message = Insufficient login-on-connect (LoC) parameters - see www.undernet.org/loc/ for help

#
# What is the period (in seconds) in which we will check for
# new webrelay messages
#

webrelay_interval = 10;

#
# How long the bot should stay in an idle channel before leaving it.
# This only takes into account join/parts, not privmsg.
# Default is 2 days (172800 seconds)
#

part_idle_chan = 172800

#
# Enable/Disable totp authentication (must be enabled in mod.cservice/cservice_config.h on compliation)
# 1 = totp enabled, 0 = totp disabled

enable_totp = 0

# A welcome message for a newly accepted channel
# For empty use '' and it means disabled

welcome_newchan_message = Congratulations! Channel %s has been registered!

# A welcome topic for a newly accepted channel
# For empty use '' and it means disabled. Applies only on empty channel topic.
# TOPIC_TRACK must be #define in \include\gnuworld_config.h

welcome_newchan_topic = *** Congratulations! Your channel application has been accepted! ***

# After how much seconds should expire any newly created never logged in user

neverloggedin_users_expiretime = 21600

# Days to expire users
# 0 = never expire

users_expire_days = 60

# Day length in seconds - refers to users expiration

day_seconds = 86400

#              #               #
#  *** The Judge settings ***  #
#              #               #

# Required supporters

required_supporters = 5

# Length of a day in seconds

judge_day_seconds = 3600

# If somebody supports with a 'NO' answer, the channel will be set as noreg
# for the specified number of days

noreg_days_on_nosupport = 1

# If one of the supporters gets marked as Fraud during channel registration, 
# the channel will be rejected automatically if the value is '1' enabled

reject_app_on_userfraud = 1

# If the value is 1 enabled then all channels at a minimum require an admin to Mark As Reviewed
# before application can be fully processed by TheJudge

require_review = 1

# If the value is 1 enabled, any channel application with admin comments of objectsions will
# require manual decision accept/reject by an admin

decide_on_object = 1

# If the value is 1 enabled, after all successful registration stages there will be no automatic accepts.
# Channel will be left at to 'Ready to review' stage, waiting for an admin's final decision to accept/reject

decide_on_complete = 0

# After how many days will be a channel automatically rejected
# when it was no decision made by an admin for a 'Ready to review' channel

reviews_expire_time = 100

# After some days, we cleanup the database from old application datas: pending channels, supporters, etc
# But this applies *only* for Accepted OR Rejected channels!

pendings_expire_time = 30

# The length of the traffic checking period.

max_days = 2

# The number of unique IP addresses that must visit the channel during traffic checking

unique_joins = 3

# The total number of joins needed in traffick checking. This is a full sum.

joins = 5

# The number of supporters required to have at least 1 joincount during traffic checking.
# This value is less or equal than required_supporters

min_supporters = 3

# The minimum joincount required for each supporter during traffic checking.
# If any supporter has a lower joincount than this value, will result in a reject.

min_supporters_joins = 1

# Number of days for notification

notify_days = 1

# Number of days waiting for supporters confirmation

support_days = 1

# Reviewer's user_id

reviewer_id = 1

# Where to log application channel's stages, and other The Judge announces.
# if set to 0 will log to debug channel, otherwise to admin channel

log_to_admin_console = 1;

# chanfix servername to send and receive Oplist/Score requests/answers
chanfix_servername = gnuworld6.undernet.org
